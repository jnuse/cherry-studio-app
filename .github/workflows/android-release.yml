# .github/workflows/android-release.yml

name: Build and Release Android APK (Final Polished Version)

on:
  # push:
    # branches:
      # - main
  workflow_dispatch:

jobs:
  build-and-release:
    name: Build and Release APK
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Generate database schema
        run: npx drizzle-kit generate
        
      - name: Generate native Android project (prebuild)
        run: npx expo prebuild --platform android --non-interactive
      
      - name: Inject missing 'hermesEnabled' property
        run: |
          echo -e "ext {\n    hermesEnabled = true\n}\n" > temp_hermes_config.txt
          cat android/build.gradle >> temp_hermes_config.txt
          mv temp_hermes_config.txt android/build.gradle

      - name: Configure Gradle properties
        run: |
          echo "org.gradle.jvmargs=-Xmx4g" > android/gradle.properties
          echo "org.gradle.daemon=true" >> android/gradle.properties
          echo "org.gradle.parallel=true" >> android/gradle.properties
          echo "org.gradle.configureondemand=true" >> android/gradle.properties
          echo "android.useAndroidX=true" >> android/gradle.properties
          
      # ✨✨✨ 最终修正：使用正确的文件名 `gradlew` ✨✨✨
      - name: Build APK with Gradle
        run: |
          cd android
          # 赋予正确的 gradlew 脚本执行权限
          chmod +x ./gradlew
          # 执行打包命令
          ./gradlew assembleRelease
          cd ..

      - name: Find and rename APK
        id: find_apk
        run: |
          APK_PATH="android/app/build/outputs/apk/release/app-release.apk"
          if [ ! -f "$APK_PATH" ]; then
            echo "::error::APK not found at standard path: $APK_PATH"
            find . -name "*.apk" -type f
            exit 1
          fi
          NEW_APK_NAME="app-build-${{ github.run_number }}.apk"
          mv "$APK_PATH" "$NEW_APK_NAME"
          echo "apk_name=$NEW_APK_NAME" >> $GITHUB_OUTPUT

      - name: Create GitHub Release and Upload APK
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v1.0.${{ github.run_number }}
          name: "Release v1.0.${{ github.run_number }}"
          body: |
            Automated release based on commit: ${{ github.sha }}
            Build number: ${{ github.run_number }}
          files: ${{ steps.find_apk.outputs.apk_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
